#include <iostream>
using namespace std;
int main() {
	setlocale(LC_ALL, "Russian");
	// Пример 1. Вывод значений массива
	const int size = 5; 
	int arr[size];
	arr[size]{ 55, 511, 2, 123, 95 };
	for (int i = 0; i < size; i++) {
		arr[i]; // поочереди перебераем элементы массива
		cout << arr[i] << endl; // вывод значений массива в консоль
	}



	// Пример 2. Заполение массива
	const int zuki = 5;
	int soko[zuki]; 
	for (int j = 0; j < zuki; j++) {
		soko[j] = j; // Задаем значение элементам массива от [0 до 4]
	}
	// удобней всего обращаться к массиву через цикл for
	/*
	Запись в тетрадь
	Сегодня мы узнаем:
	Как вывести содержимое массива с помощью цикла?
	Как заполнить массив с помощью цикла?
	Ход работы:
	Пример 1
	1.1 Создаем массив. Но вводим констандную переменную 'size'
	Наш массив буд размером 5. Почему мы сделали так?
	Это сделано для того чтобы удобно обращаться к элементам массива.
	1.2 Иниц. цикл for. В условии ставим что i < size. Но почему мы вводили в
	цикл и массив конст. переменную, когда просто можно было написать число 5?
	Представим что у нас много массивов или один массив, но с ним работают 
	много циклов.
	К примеру: 
	1. Нам нужно поменять размер массива. А значить нужно будет менять каждую 
	цифру в цикле. Когда можно просто иниц. ее как переменную
	2. Предохраняет от ошибки
	3. Почему же const? Это предостерегает от таких строк:
	size = size + 1;
	Пример 2
    Чтобы цикл задавал элементам массива значения нужно: (см. пример 2)
	*/
}