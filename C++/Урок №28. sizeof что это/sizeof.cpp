#include <iostream>
using namespace std;

int main()
{
    setlocale(LC_ALL, "ru");
    // Пример 1
    cout << sizeof(int) << endl;
    // Пример 2
    int a;
    cout << sizeof(a) << endl;
    // Пример 3
    int arr[]{ 4,5,3,53,43,59 };
    cout << sizeof(arr) / sizeof(int) << endl;
    // Пример 4
    double ibrik[]{ 4,453,53,44,54,5, };
    for (int i = 0; i < sizeof(arr) / sizeof(int); i++) {
        cout << ibrik[i] << endl; // Вывод всех значений ячеек масива ibrik[]
    }
    /*
    sizeof - это ключевое слово, коттрое возвращает длину в байтах либо
    типов данных либо переменной, которую мы используем вместе с кл. словом.
    Пример 1.
    Если мы например введем эту строчку, то sizeof( int ) покажет нам сколько
    весит тип данных int в байтах. Т.е. выведет 4.
    Пример 2.
    Ответ: 4. Но как? Переменная же пустая? Дело в том, что при указании типа данных
    даже без иниц. для переменной уже выделяется место в данном случае равное 4 байтам.
    Пример 3.
    Как же sizeof поможет с работой с массивами?
    Рассмотрим пример 3, что же на нем изображается?
    Дело в том что мы не знаем сколько ячеек содержит массив. Поэмому кол-во ячеек можно 
    найти с помощью строки 'sizeof(arr) / sizeof(int)' => вес всего массива делить на 
    вес одной ячейки, но это нам может потребоваться?
    Примет 4
    Эту строку можно использовать при работе с циклами, если не знаешь кол-во ячеек в
    массиве. Но в последствии может возникнуть путанница с типом данных элементов.
    В этом случае лучше написать не sizeof(arr) / sizeof(int), а sizeof(arr) / sizeof(arr[0])
    */
}