#include <iostream>
using namespace std;

int Sum(int a, int b)
{
	return a + b;
}

double Sum(double a, double b)
{
	return a + b;
}

int Sum(int a, int b, int c)
{
	a++;
	cout << "Хаю - хай!" << endl;
	return a + b + c;
}

void main()
{
	setlocale(LC_ALL, "Russian");
	cout << Sum(5, 6) << endl;
	cout << Sum(4.5, 24.5) << endl;
	cout << Sum(4, 5, 3) << endl;
}
/*
Мы узнаем:
Перегрузка функции - это разные функции с 1 именем. Вариант функции.
Что такое перегрузка функции и для чего она нужна?
Чтобы понять что это такое, объявим какую либо функцию. Например функцию Sum
Эта функция принимает только целочисленный тип данных и возвращает только
целочисленный тип данных.
А что если я захочу использовать сумму вещ. чисел, значит я не могу исп. функ. Sum?
Чтобы решить эту проблему нужна перегрузка функции
Вводим уже другую функцию, но с таким же именем но с типом double

Теперь когда мы попытаемся вызвать эту функцию, компилятор скажет нам о двух таких суще-
ствующих функций.

Теперь мы имеем возможность вводить вместо a и b любые числа (целые, вещественные),
компилятор сам определит к какой функции ее присвоить.

Перегружать функцию можно не только типом данных, но еще и кол-вом параметров.
(см. в пример)

Еще один момент
Хотя имена наших функций одинаковы, содержание тела функции может отличаться
*/