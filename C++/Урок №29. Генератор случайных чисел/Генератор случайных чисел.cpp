#include <iostream>
#include <ctime> 
using namespace std;

int main()
{
    setlocale(LC_ALL, "ru");
    // Пример 1
    srand(time(NULL));
    int a = rand() % 100;
    cout << a << endl;
    a = rand() % 100;
    cout << a << endl;
    a = rand() % 100;
    cout << a << endl;
    // Пример 2
    int const size = 10;
    int arr[size];
    
    for (int i = 0; i < size; i++) {
        arr[i] = rand()%10;
    }
    for (int j = 0; j < size;j++) {
        cout << arr[j] << endl;
    }
    /*
    Запись в тетерать

    Для того чтобы сгенерировать случайное число нужно воспользоваться функцией: 'rand()' 
    Генератор чисел нужен к примеру чтобы заполнить наш массив.
    Пример 1
    В этом примере мы проиниц. переменную а случайным значением. Т.е. при
    каждом запуске программа будет выводить случайное число в консоль.
    Можем повторить эту операцию.

    Теория: на самом деле функция 'rand()' генерирует не просто случайные числа. Ее гене-
    рация зависит от точки, с которой она начнем ее проводить. За этом точкой следит
    строка 'srand()'. В зависимости от ее параметров функция 'rand()' генерирует числа.
    Тогда появл. проблема. Мы что каждый раз будем менять содержимое функции 'srand()'?
    Для этого воспользуемся еще одной функцией: time(), но для этой функции нужно подклю-
    чить еще одну библиотеку под названием: <ctime>.

    Чтобы все работало как надо вводим строку srand(time(NULL));
    Эта штука каждый раз будет генерировать новую точку генерации. Без повторений!!!
    srand(time(NULL)); - достаточно вызвать 1 раз, как setlocale(...)
    
    Но какже наложить диапазон на генерируемые числа?
    Для этого после rand() нужно дописывать %{макс. число}
    т.е rand()%5; - генерир. числа от 0 до 5
    Но что если мы хотим чтобы диапазон начинался не с 0?
    Для этого просто прибовляем чило к функции.
    rand()%100 + 50; - от 50 до 100

    // Пример 2
    Как заполнить массив такими числами?
    (см. на пример 2) также можно его описать в теради по своему
    */
}